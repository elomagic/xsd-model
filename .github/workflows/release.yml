name: Release to Maven repository

on:
  workflow_dispatch:

jobs:
  release:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Cache Maven repository
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: OSSRH_USERNAME # env variable for username in deploy
          server-password: OSSRH_CENTRAL_TOKEN # env variable for token in deploy

      - name: Extract releasing version from POM
        id: extract_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          # Remove -SNAPSHOT from version
          VERSION=${VERSION%-SNAPSHOT}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up Git user
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      # TODO GPG signature ???
      - name: Configure GPG Key
        run: |
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}

      - name: Release and deploy with Maven
        run: mvn -B clean install release:prepare release:perform -P release

      - name: Upload release assets
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2
        with:
          name: v${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          files: |
            target/xsd*.*
            
